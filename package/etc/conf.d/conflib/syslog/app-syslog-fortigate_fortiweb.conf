block parser app-syslog-fortigate_fortiweb() {
 channel {

        parser {
            kv-parser(prefix(".values.") template("$(template t_hdr_msg)"));
        };
        filter {
            (
                "${.values.eventtime}" ne ""
                or ("${.values.date}" ne "" and "${.values.time}" ne "")
            )
			and "${.values.device_id}" ne ""
            and (
                "${.values.type}" ne "traffic"
                or "${.values.type}" ne "attack"
                or "${.values.type}" ne "event"
            )
		};
        parser {
            regexp-parser(
                patterns('^F(?<dev_type>[A-Z]|\dK)(?<serial>.+)')
                prefix(".tmp.")
                template('${.values.device_id}')
            );
        };

        rewrite {
            r_set_splunk_dest_default(
                index('netops')
                sourcetype('fwb_log')
                vendor("fortinet")
                product("fortiweb")
                template('t_msg_only')
            );

            set("${.values.devname}", value("HOST"));
            subst('.*([\+-]\d+:\d+).*', $1, value(".values.timezone"));
            subst('([\+-])(\d)(?=:)(:\d+)', "${1}0${2}${3}", value(".values.timezone"));

        };
        if {
            filter {
                "${.values.eventtime}" ne ""
            };
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    template("${.values.eventtime}")
                    patterns('^(?<timestamp>\d{10})\.?(?<fraq>\d{3,6})')
                );
            };
            parser {
                date-parser-nofilter(
                    format(
                        '%s.%f',
                        )
                    template("${.tmp.timestamp}.${.tmp.fraq:-000}")
                );
            };
        } else {
            parser {
                date-parser-nofilter(
                    format(
                        '%Y-%m-%d:%H:%M:%S%z',
                        '%Y-%m-%d:%H:%M:%S'
                        )
                    template("${.values.date}:${.values.time}${.values.tz}")
                );
            };
        };
        if {
            filter {
                "${.tmp.dev_type}" eq "E"
            };
            rewrite{
                r_set_splunk_dest_default(
                    index('email')
                    sourcetype('fwb:email:${.values.type}')
                    vendor("fortinet")
                    product("fortimail")
                    class('${.values.type}')
                    template('t_msg_only')
                );
            };
        } else {
            if (match("traffic" value(".values.type"))) {
                rewrite {
                    r_set_splunk_dest_update(
                        class('traffic')
                        index('netfw')
                        sourcetype('fwb_traffic')
                    );
                };
            } elif (match("attack" value(".values.type"))) {
                rewrite {
                    r_set_splunk_dest_update(
                        class('attack')
                        index('netids')
                        sourcetype('fwb_attack')
                    );
                };
            } elif (match("event" value(".values.type"))) {
                rewrite {
                    r_set_splunk_dest_update(
                        class('event')
                        index('netops')
                        sourcetype('fwb_event')
                    );
                };
            } else {
                rewrite {
                    r_set_splunk_dest_update(
                        class('log')
                        index('netops')
                        sourcetype('fwb_log')
                    );
                };
            };
        };

   };
};
application app-syslog-fortigate_fortiweb[sc4s-syslog] {
	parser { app-syslog-fortigate_fortiweb(); };
};
