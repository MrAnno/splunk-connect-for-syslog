block parser app-raw-bsd_nopri() {
    channel {
        parser {
            syslog-parser(
                drop-invalid(yes)
                flags(assume-utf8, guess-timezone));
        };

        rewrite {
            set("bsd_nopri", value("fields.sc4s_syslog_format"));
            groupunset(values('.tmp.*'));
        };
        if {
            filter{
                match("^rfc3" value("fields.sc4s_syslog_format"))
                and not host('^[a-zA-Z0-9_\-\.]+$')
                and not host('^slot\d+\/')
            };
            rewrite {
                set("${HOST} $(template t_hdr_msg)" value("MSG"));
                unset(value("LEGACY_MSGHDR"));
                unset(value("PID"));
                unset(value("PROGRAM"));
                set('$SOURCEIP' value('HOST'));
            };
        };        
        if {
            # If program is probably not valid cleanup MESSAGE so log paths don't have too
            # This isn't great for performance but is reliable good reason to use 5424
            filter{
                match("^rfc3" value("fields.sc4s_syslog_format"))
            };
            parser(app-plugin-syslog-fix-program);
            rewrite {
                set("$(template t_hdr_msg)" value("MSG"));
                unset(value("LEGACY_MSGHDR"));
                unset(value("PID"));
                unset(value("PROGRAM"));
            };
        };     
   };
};
application app-raw-bsd_nopri[sc4s-raw-syslog] {
    filter {
        message('^\w\w\w \d\d \d\d:\d\d:\d\d ');
    };
    parser { app-raw-bsd_nopri(); };
};
